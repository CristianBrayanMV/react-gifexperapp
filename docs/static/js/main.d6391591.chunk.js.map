{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","api","encodeURI","fetch","response","json","data","gifs","map","img","id","title","url","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAmBK,OACrCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAhBc,SAACL,GACvBA,EAAEC,iBACFH,EAAcE,EAAEM,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,MACrB,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAGzCG,QAAQC,IAAIT,GAXO,kBAYZA,GAZY,4CAAH,sDCCPU,EAAc,SAAC,GAAiB,IAAhBL,EAAe,EAAfA,IAAID,EAAW,EAAXA,MAC7B,OACI,sBAAKO,UAAU,0CAAf,UACI,qBAAKC,IAAKP,EAAKQ,IAAKT,IACpB,4BAAIA,QCFHU,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0BZ,mBAAS,CAACmB,KAAK,GAAGgB,SAAQ,IAApD,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAZAC,qBAAU,WACN3B,EAAQC,GAAU2B,MAAK,SAAAC,GAEnBH,EAAS,CACLlB,KAAKqB,EACLL,SAAQ,SAMjB,CAACvB,IACGwB,EDbuBK,CAAa7B,GAA/Bc,EAAZ,EAAOP,KAAYgB,EAAnB,EAAmBA,QAEnB,OACI,qCACI,6BAAKvB,IACJuB,GAAW,mBAAGJ,UAAU,gDAAb,yBACZ,qBAAKA,UAAU,YAAf,SAGQL,EAAOL,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEWlBmB,EAvBM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAGA,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAC3B,6BAEO4C,EAAWtB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCdvCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6391591.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault();\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories(cats => [inputValue,...cats]);\r\n        setInputValue(\"\");\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n","\r\nexport const getGifs = async(category) => {\r\n    const api = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=triJeR7B1d7mslXOJdgoV78HCEfYUFGt`;\r\n    const response = await fetch(api);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(img =>  (\r\n        {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        }\r\n    ));\r\n    console.log(gifs);\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({url,title}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category);   \r\n   \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"card animate__animated animate__fadeInDownBig\">Cargando...</p>}             \r\n            <div className=\"card-grid\">\r\n                        \r\n                {\r\n                    images.map(img =>                    \r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img} />\r\n                    )\r\n                }               \r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({data:[],loading:true});\r\n    \r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            \r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n            \r\n        });\r\n        \r\n\r\n    }, [category]);\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <hr/>\r\n        \r\n            <AddCategory setCategories={setCategories}/>\r\n            {<ol>                \r\n                { \r\n                    categories.map( category => (\r\n                         <GifGrid key={category} category={category}/>\r\n                       \r\n                    ))\r\n                }\r\n            </ol>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}